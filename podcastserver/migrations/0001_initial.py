# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-29 13:11
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('defnr', models.IntegerField(db_column='DEFNR', primary_key=True, serialize=False)),
                ('section', models.SmallIntegerField(blank=True, db_column='SECTION', null=True)),
                ('flags', models.SmallIntegerField(blank=True, db_column='FLAGS', null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=254, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'DEFINITION',
            },
        ),
        migrations.CreateModel(
            name='DigasPodcast',
            fields=[
                ('refnr', models.IntegerField(db_column='REFNR', primary_key=True, serialize=False)),
                ('class_field', models.IntegerField(blank=True, db_column='CLASS', null=True)),
                ('title', models.CharField(blank=True, db_column='TITLE', max_length=80, null=True)),
                ('filename', models.CharField(blank=True, db_column='FILENAME', max_length=254, null=True)),
                ('filename2', models.CharField(blank=True, db_column='FILENAME2', max_length=254, null=True)),
                ('origin', models.CharField(blank=True, db_column='ORIGIN', max_length=40, null=True)),
                ('creator', models.CharField(blank=True, db_column='CREATOR', max_length=10, null=True)),
                ('createdate', models.IntegerField(blank=True, db_column='CREATEDATE', null=True)),
                ('createtime', models.IntegerField(blank=True, db_column='CREATETIME', null=True)),
                ('duration', models.IntegerField(blank=True, db_column='DURATION', null=True)),
                ('softdel', models.SmallIntegerField(blank=True, db_column='SOFTDEL', null=True)),
                ('flags', models.CharField(blank=True, db_column='FLAGS', max_length=20, null=True)),
                ('replflags', models.SmallIntegerField(blank=True, db_column='REPLFLAGS', null=True)),
                ('state', models.IntegerField(blank=True, db_column='STATE', null=True)),
                ('personal', models.CharField(blank=True, db_column='PERSONAL', max_length=10, null=True)),
                ('pool', models.CharField(blank=True, db_column='POOL', max_length=10, null=True)),
                ('priority', models.IntegerField(blank=True, db_column='PRIORITY', null=True)),
                ('identifier', models.IntegerField(blank=True, db_column='IDENTIFIER', null=True)),
                ('registration', models.CharField(blank=True, db_column='REGISTRATION', max_length=40, null=True)),
                ('replident', models.CharField(blank=True, db_column='REPLIDENT', max_length=40, null=True)),
                ('musicid', models.CharField(blank=True, db_column='MUSICID', max_length=20, null=True)),
                ('gemaid', models.CharField(blank=True, db_column='GEMAID', max_length=20, null=True)),
                ('informat', models.CharField(blank=True, db_column='INFORMAT', max_length=20, null=True)),
                ('language', models.IntegerField(blank=True, db_column='LANGUAGE', null=True)),
                ('story', models.IntegerField(blank=True, db_column='STORY', null=True)),
                ('generation', models.SmallIntegerField(blank=True, db_column='GENERATION', null=True)),
                ('usecount', models.IntegerField(blank=True, db_column='USECOUNT', null=True)),
                ('ressort', models.SmallIntegerField(blank=True, db_column='RESSORT', null=True)),
                ('subressort', models.SmallIntegerField(blank=True, db_column='SUBRESSORT', null=True)),
                ('program', models.IntegerField(blank=True, db_column='PROGRAM', null=True)),
                ('broadcast', models.CharField(blank=True, db_column='BROADCAST', max_length=40, null=True)),
                ('broadcastdate', models.IntegerField(blank=True, db_column='BROADCASTDATE', null=True)),
                ('author', models.CharField(blank=True, db_column='AUTHOR', max_length=254, null=True)),
                ('editor', models.CharField(blank=True, db_column='EDITOR', max_length=254, null=True)),
                ('production', models.IntegerField(blank=True, db_column='PRODUCTION', null=True)),
                ('source', models.CharField(blank=True, db_column='SOURCE', max_length=40, null=True)),
                ('keywords', models.CharField(blank=True, db_column='KEYWORDS', max_length=100, null=True)),
                ('changeuser', models.CharField(blank=True, db_column='CHANGEUSER', max_length=10, null=True)),
                ('changedate', models.IntegerField(blank=True, db_column='CHANGEDATE', null=True)),
                ('changetime', models.IntegerField(blank=True, db_column='CHANGETIME', null=True)),
                ('remark', models.TextField(blank=True, db_column='REMARK', null=True)),
                ('filesize', models.IntegerField(blank=True, db_column='FILESIZE', null=True)),
                ('audioformat', models.IntegerField(blank=True, db_column='AUDIOFORMAT', null=True)),
                ('audiomode', models.IntegerField(blank=True, db_column='AUDIOMODE', null=True)),
                ('samplerate', models.IntegerField(blank=True, db_column='SAMPLERATE', null=True)),
                ('bitrate', models.IntegerField(blank=True, db_column='BITRATE', null=True)),
                ('maxlevel', models.IntegerField(blank=True, db_column='MAXLEVEL', null=True)),
                ('sendrights', models.IntegerField(blank=True, db_column='SENDRIGHTS', null=True)),
                ('broadcastings', models.IntegerField(blank=True, db_column='BROADCASTINGS', null=True)),
                ('firstusedate', models.IntegerField(blank=True, db_column='FIRSTUSEDATE', null=True)),
                ('lastusedate', models.IntegerField(blank=True, db_column='LASTUSEDATE', null=True)),
                ('deletedate', models.IntegerField(blank=True, db_column='DELETEDATE', null=True)),
                ('recorddate', models.IntegerField(blank=True, db_column='RECORDDATE', null=True)),
                ('fadein', models.IntegerField(blank=True, db_column='FADEIN', null=True)),
                ('fadeout', models.IntegerField(blank=True, db_column='FADEOUT', null=True)),
                ('markin', models.IntegerField(blank=True, db_column='MARKIN', null=True)),
                ('markout', models.IntegerField(blank=True, db_column='MARKOUT', null=True)),
                ('intro', models.IntegerField(blank=True, db_column='INTRO', null=True)),
                ('outro', models.IntegerField(blank=True, db_column='OUTRO', null=True)),
                ('fading', models.IntegerField(blank=True, db_column='FADING', null=True)),
                ('ramp', models.SmallIntegerField(blank=True, db_column='RAMP', null=True)),
                ('donut', models.SmallIntegerField(blank=True, db_column='DONUT', null=True)),
                ('tag', models.SmallIntegerField(blank=True, db_column='TAG', null=True)),
                ('presenter', models.IntegerField(blank=True, db_column='PRESENTER', null=True)),
                ('speaker', models.IntegerField(blank=True, db_column='SPEAKER', null=True)),
                ('project', models.IntegerField(blank=True, db_column='PROJECT', null=True)),
                ('category', models.IntegerField(blank=True, db_column='CATEGORY', null=True)),
                ('musicformat', models.IntegerField(blank=True, db_column='MUSICFORMAT', null=True)),
                ('type', models.IntegerField(blank=True, db_column='TYPE', null=True)),
                ('intensity', models.IntegerField(blank=True, db_column='INTENSITY', null=True)),
                ('mood', models.IntegerField(blank=True, db_column='MOOD', null=True)),
                ('tempo', models.IntegerField(blank=True, db_column='TEMPO', null=True)),
                ('style', models.IntegerField(blank=True, db_column='STYLE', null=True)),
                ('era', models.IntegerField(blank=True, db_column='ERA', null=True)),
                ('instrumentation', models.IntegerField(blank=True, db_column='INSTRUMENTATION', null=True)),
                ('target', models.IntegerField(blank=True, db_column='TARGET', null=True)),
                ('playtime', models.IntegerField(blank=True, db_column='PLAYTIME', null=True)),
                ('seasonal', models.IntegerField(blank=True, db_column='SEASONAL', null=True)),
                ('weekday', models.SmallIntegerField(blank=True, db_column='WEEKDAY', null=True)),
                ('cartpriority', models.SmallIntegerField(blank=True, db_column='CARTPRIORITY', null=True)),
                ('endcode', models.IntegerField(blank=True, db_column='ENDCODE', null=True)),
                ('carrier', models.IntegerField(blank=True, db_column='CARRIER', null=True)),
                ('motive', models.CharField(blank=True, db_column='MOTIVE', max_length=40, null=True)),
                ('foreignmotive', models.CharField(blank=True, db_column='FOREIGNMOTIVE', max_length=40, null=True)),
                ('spotlength', models.IntegerField(blank=True, db_column='SPOTLENGTH', null=True)),
                ('customer', models.IntegerField(blank=True, db_column='CUSTOMER', null=True)),
                ('product', models.IntegerField(blank=True, db_column='PRODUCT', null=True)),
                ('productgroup', models.IntegerField(blank=True, db_column='PRODUCTGROUP', null=True)),
                ('extdevice', models.IntegerField(blank=True, db_column='EXTDEVICE', null=True)),
                ('archivedate', models.IntegerField(blank=True, db_column='ARCHIVEDATE', null=True)),
                ('mediumtype', models.IntegerField(blank=True, db_column='MEDIUMTYPE', null=True)),
                ('mediumname', models.CharField(blank=True, db_column='MEDIUMNAME', max_length=40, null=True)),
                ('mediumcode', models.IntegerField(blank=True, db_column='MEDIUMCODE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'PODCAST',
            },
        ),
    ]
